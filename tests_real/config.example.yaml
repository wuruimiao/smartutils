loguru:
  level: INFO
  logdir: ""
  stream: true

kafka:
  default:
    bootstrap_servers:
      - host: 127.0.0.1
        port: 29092
    client_id: pytest-client-id
    acks: all
    compression_type: zstd
    max_batch_size: 16384
    linger_ms: 0
    request_timeout_ms: 1000
    retry_backoff_ms: 100

mongo:
  default:
    hosts:
      - host: 127.0.0.1
        port: 27017
    user: root
    passwd: root
    db: test_db
    pool_size: 5
    pool_timeout: 10
    pool_recycle: 60
    connect_timeout: 3
    execute_timeout: 3

mysql:
  default:
    host: 127.0.0.1
    port: 3306
    user: root
    passwd: root
    db: test_db
    pool_size: 10
    max_overflow: 5
    pool_timeout: 30
    pool_recycle: 3600
    echo: false
    echo_pool: false
    connect_timeout: 10
    execute_timeout: 10

redis:
  default:
    host: 127.0.0.1
    port: 6379
    password: ""
    db: 10
    pool_size: 10
    connect_timeout: 10
    socket_timeout: 10

middleware:
  app:
    - log
    - exception
    - header
    - me
  routes:
    me-permission:
      - log
      - exception
      - header
      - me
  setting:
    log:
      level: INFO
    exception:
      show_detail: false
    header:
      default_user: "system"
    me:
      key: auth

alert_feishu:
  enable: true
  webhooks:
    - https://open.feishu.cn/open-apis/bot/v2/hook/****

client:
  auth:
    type: http
    endpoint: https://httpbin.org
    timeout: 10
    verify_tls: true
    breaker_enabled: true
    breaker_fail_max: 1
    breaker_reset_timeout: 3
    apis:
      me:
        method: GET
        path: /me
      permission:
        method: GET
        path: /permission

  grpcbin-ok:
    type: grpc
    endpoint: grpcb.in:9000
    apis:
      SayHello:
        path: tests_real.grpcbin.stub.hello_pb2_grpc.HelloServiceStub
        method: SayHello
  grpcbin-ssl-ok:
    type: grpc
    endpoint: grpcb.in:9001
    tls: true
    apis:
      SayHello:
        path: tests_real.grpcbin.stub.hello_pb2_grpc.HelloServiceStub
        method: SayHello
  grpcbin-fail:
    type: grpc
    endpoint: grpcb.in:9000
    timeout: 0.1
    apis:
      SayHello:
        path: tests_real.grpcbin.stub.hello_pb2_grpc.HelloServiceStub
        method: SayHello
  grpcbin-breaker:
    type: grpc
    endpoint: grpcb.in:9000
    breaker_enabled: true
    breaker_fail_max: 1
    breaker_reset_timeout: 3
    apis:
      SayHello:
        path: tests_real.grpcbin.stub.hello_pb2_grpc.HelloServiceStub
        method: SayHello
  grpcbin-breaker-fail:
    type: grpc
    endpoint: grpcb.in:9000
    timeout: 0.1
    breaker_enabled: true
    breaker_fail_max: 1
    breaker_reset_timeout: 3
    apis:
      SayHello:
        path: tests_real.grpcbin.stub.hello_pb2_grpc.HelloServiceStub
        method: SayHello
  httpbin-ok:
    type: http
    endpoint: https://httpbin.org
    timeout: 10
    verify_tls: true
    apis:
      get_ip:
        method: GET
        path: /ip
      status_500:
        method: GET
        path: /status/500
      anything_post:
        method: POST
        path: /anything
  httpbin-breaker:
    type: http
    endpoint: https://httpbin.org
    timeout: 10
    verify_tls: true
    breaker_enabled: true
    breaker_fail_max: 1
    breaker_reset_timeout: 3
    apis:
      get_ip:
        method: GET
        path: /ip
      status_500:
        method: GET
        path: /status/500
      anything_post:
        method: POST
        path: /anything
  httpbin-fail:
    type: http
    endpoint: https://httpbin.org
    timeout: 1
    verify_tls: true
    apis:
      delay:
        method: GET
        path: /delay/100
  httpbin-breaker-fail:
    type: http
    endpoint: https://httpbin.org
    timeout: 1
    verify_tls: true
    breaker_enabled: true
    breaker_fail_max: 1
    breaker_reset_timeout: 3
    apis:
      delay:
        method: GET
        path: /delay/100

project:
  name: pytest
  id: 0
  description: pytest
  version: 0.0.1
  key: pytest_key
